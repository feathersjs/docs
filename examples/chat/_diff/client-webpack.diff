diff -bdur '--exclude-from=../make-diffs-ignore-public.txt' --new-file client/jquery/client/app.js client/webpack/client/app.js
--- client/jquery/client/app.js	1969-12-31 19:00:00.000000000 -0500
+++ client/webpack/client/app.js	2017-01-16 08:59:58.517000000 -0500
@@ -0,0 +1,191 @@
+
+const $ = require('jquery');
+const io = require('socket.io-client');
+const feathers = require('feathers-client');
+const moment = require('moment');
+
+var serverUrl = 'http://localhost:3030';
+const socket = io(serverUrl);
+
+const feathersClient = feathers()
+  .configure(feathers.socketio(socket));
+
+// Routing
+
+let currRoute = null;
+router('sign-in');
+
+function router(newRoute) {
+  if (currRoute === 'chat') { unmountChat(); }
+  
+  $('#sign-up').css('display', newRoute === 'sign-up' ? 'block' : 'none');
+  $('#sign-in').css('display', newRoute === 'sign-in' ? 'block' : 'none');
+  $('#chat').css('display', newRoute === 'chat' ? 'block' : 'none');
+  
+  if (newRoute === 'sign-up') { mountSignUp(); }
+  if (newRoute === 'sign-in') { mountSignIn(); }
+  if (newRoute === 'chat') { mountChat(); }
+  currRoute = newRoute;
+}
+
+// Feathers
+
+feathersClient
+  .configure(feathers.hooks())
+  .configure(feathers.authentication({
+    storage: window.localStorage
+  }));
+
+const userService = feathersClient.service('/users');
+const messageService = feathersClient.service('/messages');
+
+let userCount; // number of users in table
+const defaultAvatar = 'https://placeimg.com/60/60/people';
+
+// Sign up, sign in event handlers
+
+$('#signup-user').on('click', ev => {
+  ev.preventDefault();
+  signUpUser($('#email-signup').val().trim(), $('#password-signup').val().trim());
+});
+
+$('#to-signin-user').on('click', ev => {
+  ev.preventDefault();
+  router('sign-in');
+});
+
+$('#signin-user').on('click', ev => {
+  ev.preventDefault();
+  signInUser($('#email-signin').val().trim(), $('#password-signin').val().trim());
+});
+
+$('#to-signup-user').on('click', ev => {
+  ev.preventDefault();
+  router('sign-up');
+});
+
+// Chat event handlers
+
+$('#signout-user').on('click', ev => {
+  ev.preventDefault();
+  router('sign-in')
+});
+
+$('#send-message').on('submit', function(ev) {
+  ev.preventDefault();
+  const messageEl = $(this).find('[name="text"]'); // message input field
+  sendNewMessage(messageEl.val().trim());
+  messageEl.val(''); // clear input field
+});
+
+messageService.on('created', message => { // no events occur unless client is authenticated
+  displayNewMessage(message);
+});
+
+userService.on('created', user => { // no events occur unless client is authenticated
+  displayNewUser(user);
+});
+
+// Sign in, sign out routines
+
+function mountSignUp() {
+  $('#email-signup').val('');
+  $('#password-signup').val('');
+}
+
+function signUpUser(email, password) {
+  if (!email || !password) {
+    console.log('ERROR: enter name, email and password');
+    return;
+  }
+  
+  userService.create({ email, password })
+    .then(() => router('sign-in'))
+    .catch(err => console.log('ERROR creating user:', err));
+}
+
+function mountSignIn() {
+  $('#email-signin').val('');
+  $('#password-signin').val('');
+}
+
+function signInUser(email, password) {
+  if (!email || !password) {
+    console.log('ERROR: enter email and password');
+    return;
+  }
+  
+  feathersClient.authenticate({ type: 'local', email, password })
+    .then(() => router('chat'))
+    .catch(err => console.log('ERROR: authentication', err));
+}
+
+// Chat routines
+
+function mountChat() {
+  // clear UI
+  userCount = 0;
+  $('.user-list').empty();
+  const chat = $('.chat').empty();
+  
+  messageService.find({ // Display the last few messages
+    query: {
+      $sort: { createdAt: -1 },
+      $limit: 25
+    }
+  })
+    .then(results => results.data.reverse().forEach(displayNewMessage))
+    .catch(err => console.log('ERROR: load messages', err));
+  
+  userService.find() // Display the users
+    .then(results => { results.data.forEach(displayNewUser); })
+    .catch(err => console.log('ERROR: load users', err));
+}
+
+function unmountChat() {
+  feathersClient.logout()
+    .then(() => router('sign-in'))
+    .catch(err => console.log('ERROR logging out:', err));
+}
+
+function sendNewMessage(text) {
+  if (text) {
+    messageService.create({ text }) // create message
+      .catch(err => console.log('ERROR creating message:', err));
+  }
+}
+
+function displayNewMessage(message) {
+  const defaultUser = {
+    image: defaultAvatar,
+    email: 'Anonymous'
+  };
+  
+  const sender = message.sentBy || defaultUser; // Get sender
+  const chat = $('.chat').append(
+    `<div class="message flex flex-row">
+      <img src="${sender.avatar || defaultAvatar}" alt="${sender.email}" class="avatar">
+      <div class="message-wrapper">
+        <p class="message-header">
+          <span class="username font-600">${sender.email}</span>
+          <span class="sent-date font-300">${moment(message.createdAt).format('MMM Do, hh:mm:ss')}</span>
+        </p>
+        <p class="message-content font-300">${message.text}</p>
+      </div>
+    </div>`
+  );
+  
+  chat.scrollTop(chat[0].scrollHeight - chat[0].clientHeight);
+}
+
+function displayNewUser(user) {
+  $('.online-count').html(++userCount); // Update the number of users
+  $('.user-list').append( // Add the user to the list
+    `<li>
+       <a class="block relative" href="#">
+         <img src="${user.avatar || defaultAvatar}" alt="" class="avatar">
+         <span class="absolute username">${user.email}</span>
+       </a>
+    </li>`
+  );
+}
diff -bdur '--exclude-from=../make-diffs-ignore-public.txt' --new-file client/jquery/package.json client/webpack/package.json
--- client/jquery/package.json	2017-01-01 11:01:23.034000000 -0500
+++ client/webpack/package.json	2017-01-16 09:57:36.116000000 -0500
@@ -19,7 +19,8 @@
     "test": "npm run jshint && npm run mocha",
     "jshint": "jshint src/. test/. --config",
     "start": "node src/",
-    "mocha": "mocha test/ --recursive"
+    "mocha": "mocha test/ --recursive",
+    "build": "webpack && npm run start"
   },
   "dependencies": {
     "body-parser": "1.15.2",
@@ -27,20 +28,25 @@
     "cors": "2.8.1",
     "feathers": "2.0.3",
     "feathers-authentication": "0.7.12",
+    "feathers-client": "1.9.0",
     "feathers-configuration": "0.2.3",
     "feathers-errors": "2.5.0",
     "feathers-hooks": "1.7.1",
     "feathers-nedb": "2.6.0",
     "feathers-rest": "1.6.0",
     "feathers-socketio": "1.4.2",
+    "jquery": "3.1.1",
+    "moment": "2.17.1",
     "nedb": "1.8.0",
     "passport": "0.3.2",
     "serve-favicon": "2.3.2",
+    "socket.io-client": "1.7.2",
     "winston": "2.3.0"
   },
   "devDependencies": {
     "jshint": "2.9.4",
     "mocha": "3.2.0",
-    "request": "2.79.0"
+    "request": "2.79.0",
+    "webpack": "2.2.0-rc.4"
   }
 }
diff -bdur '--exclude-from=../make-diffs-ignore-public.txt' --new-file client/jquery/webpack.config.js client/webpack/webpack.config.js
--- client/jquery/webpack.config.js	1969-12-31 19:00:00.000000000 -0500
+++ client/webpack/webpack.config.js	2017-01-16 09:04:21.476000000 -0500
@@ -0,0 +1,25 @@
+
+const path = require('path');
+const webpack = require('webpack');
+
+module.exports = {
+  context: path.join(__dirname, 'client'),
+  entry: {
+    app: './app.js',
+  },
+  output: {
+    path: path.join(__dirname, 'public/dist'),
+    filename: '[name].bundle.js',
+  },
+  module: {
+    rules: [
+      {
+        test: /\.js$/,
+        use: [{
+          loader: 'babel-loader',
+          options: { presets: ['es2015'] }
+        }],
+      },
+    ],
+  },
+};
