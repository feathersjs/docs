diff -bdur --new-file server/client/src/services/message/hooks/index.js server/finish/src/services/message/hooks/index.js
--- server/client/src/services/message/hooks/index.js	2017-01-01 15:22:15.104000000 -0500
+++ server/finish/src/services/message/hooks/index.js	2017-01-15 15:14:05.848000000 -0500
@@ -4,6 +4,28 @@
 const hooks = require('feathers-hooks');
 const auth = require('feathers-authentication').hooks;
 
+const restrictToSender = require('./restrict-to-sender');
+const process = require('./process');
+const { setCreatedAt, populate, dePopulate, serialize } = require('feathers-hooks-common');
+
+const restrictToSenderOrServer = when(isProvider('external'), restrictToSender());
+
+const populateSchema = {
+  include: [{
+    service: 'users',
+    nameAs: 'sentBy',
+    parentField: 'userId',
+    childField: '_id'
+  }]
+};
+
+const serializeSchema = {
+  only: [ '_id', 'text', 'createdAt' ],
+  sentBy: {
+    only: [ 'email', 'avatar' ]
+  }
+};
+
 exports.before = {
   all: [
     auth.verifyToken(),
@@ -12,17 +34,17 @@
   ],
   find: [],
   get: [],
-  create: [],
-  update: [],
-  patch: [],
-  remove: []
+  create: [ process(), setCreatedAt() ],
+  update: [ dePopulate(), restrictToSender() ],
+  patch: [ dePopulate(), restrictToSender() ],
+  remove: [ restrictToSenderOrServer ]
 };
 
 exports.after = {
   all: [],
-  find: [],
-  get: [],
-  create: [],
+  find: [ populate({ schema: populateSchema }), serialize(serializeSchema) ],
+  get: [ populate({ schema: populateSchema }), serialize(serializeSchema) ],
+  create: [ populate({ schema: populateSchema }), serialize(serializeSchema) ],
   update: [],
   patch: [],
   remove: []
diff -bdur --new-file server/client/src/services/message/hooks/process.js server/finish/src/services/message/hooks/process.js
--- server/client/src/services/message/hooks/process.js	1969-12-31 19:00:00.000000000 -0500
+++ server/finish/src/services/message/hooks/process.js	2017-01-03 11:12:35.930000000 -0500
@@ -0,0 +1,15 @@
+'use strict';
+
+// src/services/message/hooks/process.js
+//
+// Use this hook to manipulate incoming or outgoing data.
+// For more information on hooks see: http://docs.feathersjs.com/hooks/readme.html
+
+module.exports = () => hook => {
+  hook.data.text = hook.data.text
+    .substring(0, 400) // Messages can't be longer than 400 characters
+    .replace(/&/g,'&amp;').replace(/</g,'&lt;').replace(/>/g,'&gt;'); // Do basic HTML escaping
+  hook.data.userId = hook.params.user._id; // Add the authenticated user _id
+  
+  return hook;
+};
diff -bdur --new-file server/client/src/services/message/hooks/restrict-to-sender.js server/finish/src/services/message/hooks/restrict-to-sender.js
--- server/client/src/services/message/hooks/restrict-to-sender.js	1969-12-31 19:00:00.000000000 -0500
+++ server/finish/src/services/message/hooks/restrict-to-sender.js	2017-01-01 16:00:47.918000000 -0500
@@ -0,0 +1,25 @@
+'use strict';
+
+// src/services/message/hooks/restrict-to-sender.js
+//
+// Use this hook to manipulate incoming or outgoing data.
+// For more information on hooks see: http://docs.feathersjs.com/hooks/readme.html
+
+const errors = require('feathers-errors');
+
+module.exports = function(options) {
+  return function(hook) {
+    const messageService = hook.app.service('messages');
+    
+    // First get the message that the user wants to access
+    return messageService.get(hook.id, hook.params).then(message => {
+      // Throw a not authenticated error if the message and user id don't match
+      if (message.sentBy._id !== hook.params.user._id && hook.provider) {
+        throw new errors.NotAuthenticated('Access not allowed');
+      }
+      
+      // Otherwise just return the hook
+      return hook;
+    });
+  };
+};
diff -bdur --new-file server/client/test/services/message/hooks/process.test.js server/finish/test/services/message/hooks/process.test.js
--- server/client/test/services/message/hooks/process.test.js	1969-12-31 19:00:00.000000000 -0500
+++ server/finish/test/services/message/hooks/process.test.js	2017-01-01 13:38:18.086000000 -0500
@@ -0,0 +1,20 @@
+'use strict';
+
+const assert = require('assert');
+const process = require('../../../../src/services/message/hooks/process.js');
+
+describe('message process hook', function() {
+  it('hook can be used', function() {
+    const mockHook = {
+      type: 'before',
+      app: {},
+      params: {},
+      result: {},
+      data: {}
+    };
+
+    process()(mockHook);
+
+    assert.ok(mockHook.process);
+  });
+});
diff -bdur --new-file server/client/test/services/message/hooks/restrict-to-sender.test.js server/finish/test/services/message/hooks/restrict-to-sender.test.js
--- server/client/test/services/message/hooks/restrict-to-sender.test.js	1969-12-31 19:00:00.000000000 -0500
+++ server/finish/test/services/message/hooks/restrict-to-sender.test.js	2017-01-01 15:56:40.014000000 -0500
@@ -0,0 +1,20 @@
+'use strict';
+
+const assert = require('assert');
+const restrictToSender = require('../../../../src/services/message/hooks/restrict-to-sender.js');
+
+describe('message restrictToSender hook', function() {
+  it('hook can be used', function() {
+    const mockHook = {
+      type: 'before',
+      app: {},
+      params: {},
+      result: {},
+      data: {}
+    };
+
+    restrictToSender()(mockHook);
+
+    assert.ok(mockHook.restrictToSender);
+  });
+});
