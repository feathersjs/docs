diff -bdur --new-file 02/gen3/src/hooks/populate-teams.js 02/gen4/src/hooks/populate-teams.js
--- 02/gen3/src/hooks/populate-teams.js	1969-12-31 19:00:00.000000000 -0500
+++ 02/gen4/src/hooks/populate-teams.js	2017-04-09 09:18:59.418007000 -0400
@@ -0,0 +1,12 @@
+'use strict';
+
+// Use this hook to manipulate incoming or outgoing data.
+// For more information on hooks see: http://docs.feathersjs.com/api/hooks.html
+
+module.exports = function (options = {}) { // eslint-disable-line no-unused-vars
+  return function (context) {
+    // Hooks can either return nothing or a promise
+    // that resolves with the `context` object for asynchronous operations
+    return Promise.resolve(context);
+  };
+};
diff -bdur --new-file 02/gen3/src/services/teams/teams.hooks.js 02/gen4/src/services/teams/teams.hooks.js
--- 02/gen3/src/services/teams/teams.hooks.js	2017-04-09 09:15:24.638007000 -0400
+++ 02/gen4/src/services/teams/teams.hooks.js	2017-04-09 09:18:59.418007000 -0400
@@ -2,6 +2,8 @@

 const { authenticate } = require('feathers-authentication').hooks;

+const populateTeams = require('../../hooks/populate-teams');
+
 module.exports = {
   before: {
     all: [ authenticate('jwt') ],
@@ -15,7 +17,7 @@

   after: {
     all: [],
-    find: [],
+    find: [populateTeams()],
     get: [],
     create: [],
     update: [],
diff -bdur --new-file 02/gen3/test/hooks/populate-teams.test.js 02/gen4/test/hooks/populate-teams.test.js
--- 02/gen3/test/hooks/populate-teams.test.js	1969-12-31 19:00:00.000000000 -0500
+++ 02/gen4/test/hooks/populate-teams.test.js	2017-04-09 09:18:59.422007000 -0400
@@ -0,0 +1,19 @@
+'use strict';
+
+const assert = require('assert');
+const populateTeams = require('../../src/hooks/populate-teams');
+
+describe('\'populateTeams\' hook', () => {
+  it('runs the hook', () => {
+    // A mock context object
+    const mock = {};
+    // Initialize our hook with no options
+    const hook = populateTeams();
+
+    // Run the hook function (which returns a promise)
+    // and compare the resulting context object
+    return hook(mock).then(result => {
+      assert.equal(result, mock, 'Returns the expected context object');
+    });
+  });
+});
